@use "sass:math";
@import "breakpoints";
@import "mixins";

$input-border-radius: 5px;

.rr-text-field {
  position: relative;
  font-size: 16px;

  label {
    position: absolute;
    font-size: 1em;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    color: var(--rr-color-text-medium-emphasis);
    margin: 0 12px;
    transition: .1s ease-out;
    transform-origin: left top;
    pointer-events: none;
    z-index: 1000;
  }

  textarea + label {
    top: 16px;
  }

  input,
  textarea {
    background: #fff;
    font-size: 0.9em;
    outline: none;
    border: 0px;
    padding: 12px;
    color: var(--rr-color-input);
    transition: 0.1s ease-out;
    min-height: auto;
    height: auto;
    border-radius:$input-border-radius;
    box-sizing: border-box;
    width: 100%;
    font-family: var(--rr-font-family);
  }

  textarea {
    padding-top: 4px;
  }

  &:has(textarea) {
    padding-top: 8px;
  }

  input:focus,
  textarea:focus {
    outline: 0;
    ~ fieldset {
      border-color: var(--rr-color-secondary, var(--rr-color-primary));
    }
  }
  input:focus,
  textarea:focus {
    + label {
      color: var(--rr-color-secondary, var(--rr-color-primary));
      top: 0;
      transform: translateY(-50%) scale(.9);
    }

    ~ fieldset > legend {
      max-width: 100%;
      transform: translateX(-4%) scale(.9);
    }
  }

  input:not(:placeholder-shown),
  textarea:not(:placeholder-shown) {
    + label {
      top: 0;
      transform: translateY(-50%) scale(.9);
    }

    ~ fieldset > legend {
      max-width: 100%;
      transform: translateX(-4%) scale(.9);
    }
  }

  fieldset {
    text-align: left;
    position: absolute;
    inset: -8px 0px 0px;
    padding: 0 8px;
    pointer-events: none;
    border: 1px solid gray;
    border-radius:$input-border-radius;
    overflow: hidden;

    legend {
      visibility: hidden;
      max-width: 0.01px;
      transition: max-width 0.1s cubic-bezier(0, 0, 0.2, 1) 0ms;
      white-space: nowrap;
      padding: 0
    }
  }

  div.iti {
    width: 100%;

    label {
      left: 40px;
    }

    input {
      &:focus + label {
        left: 0;
      }
      &:not(:placeholder-shown) + label {
        left: 0;
      }
    }

    .iti__dial-code {
      color: var(--rr-color-text-medium-emphasis);
      vertical-align: middle;
    }

    .iti__country-list {
      z-index: 1001;
    }
  }
}

.rr-field {
  display: flex;
  flex-direction: column;

  .rr-field-error {
    min-height: 24px;
    margin-top: 6px;
    color: var(--rr-color-status-alarm);
    font-size: 0.85em;
    &.rr-hidden {
      display: none;
    }
  }
}

.rr-select-field {
  position: relative;
  font-size: 15px;

  label {
    position: absolute;
    font-size: 1em;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    color: var(--rr-color-text-medium-emphasis);
    padding: 0 0.3em;
    margin: 0 0.5em;
    transition: .1s ease-out;
    transform-origin: left top;
    pointer-events: none;
  }

  select {
    line-height: normal;
    visibility: visible;
    height: auto;
    background-color: transparent;
    font-size: 1em;
    outline: none;
    border-radius: 5px;
    border: none;
    padding: 0.8em 2.0em 0.7em 0.8em;
    color: var(--rr-color-text-medium-emphasis);
    transition: 0.1s ease-out;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image:
      linear-gradient(45deg, transparent 50%, gray 50%),
      linear-gradient(135deg, gray 50%, transparent 50%);
    background-position:
      calc(100% - 20px) calc(1em + 2px),
      calc(100% - 15px) calc(1em + 2px);
    background-size:
      5px 5px,
      5px 5px,
      1px 1.5em;
    background-repeat: no-repeat;
  }

  select:focus ~ fieldset {
    border-color: var(--rr-color-secondary, var(--rr-color-primary));
  }

  select:focus {
    + label {
      color: var(--rr-color-secondary, var(--rr-color-primary));
      top: 0;
      transform: translateY(-50%) scale(.9);
    }

    ~ fieldset > legend {
      max-width: 100%;
      transform: translateX(4%) scale(.9);
    }
  }

  select:not(:placeholder-shown) {
    + label {
      top: 0;
      transform: translateY(-50%) scale(.9);
    }

    ~ fieldset > legend {
      max-width: 100%;
      transform: translateX(4%) scale(.9);
    }
  }

  fieldset {
    text-align: left;
    position: absolute;
    inset: -8px 0 0;
    padding: 0 8px;
    pointer-events: none;
    border: 1px solid gray;
    border-radius:$input-border-radius;
    overflow: hidden;

    legend {
      visibility: hidden;
      max-width: 0.01px;
      transition: max-width 0.1s cubic-bezier(0, 0, 0.2, 1) 0ms;
      white-space: nowrap;
      padding-left: 4px
    }
  }
}

.rr-button {
  outline: none;
  border: none;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  border: none;
  border-radius: 4px;
  padding: 10px 16px;
  min-width: 48px;
  min-height: 40px;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  text-transform: uppercase;
  color: var(--rr-color-primary-contrast);
  background-color: var(--rr-color-primary);
  font-size: 16px;
  font-weight: 500;
  overflow: hidden;
  outline: none;
  cursor: pointer;
  transition: box-shadow 0.2s;

  // Icon button
  svg {
    fill: var(--rr-color-primary-contrast);
    width: 24px;
    height: 24px;
  }

  &.rr-button-secondary {
    color: var(--rr-color-secondary-contrast, var(--rr-color-primary-contrast));
    background-color: var(--rr-color-secondary, var(--rr-color-primary));

    svg {
      fill: var(--rr-color-secondary-contrast, var(--rr-color-primary-contrast));
    }
  }

  &::-moz-focus-inner {
    border: none;
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #fff;
    opacity: 0;
    transition: opacity 0.2s;
  }

  &::after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    border-radius: 50%;
    padding: 50%;
    width: 32px; /* Safari */
    height: 32px; /* Safari */
    background-color: #fff;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
    transition: opacity 1s, transform 0.5s;
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:active::after {
    opacity: 0.32;
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0s;
  }

  &:disabled {
    color: var(--rr-color-button-disabled);
    background-color: var(--rr-color-button-background-disabled);
    box-shadow: none;
    cursor: not-allowed;
    &::before {
      opacity: 0;
    }
    &::after {
      opacity: 0;
    }
  }
}

.rr-link {
  color: var(--rr-color-link);
  text-decoration: underline;
  font-size: 16px;
  outline: none;
  &:active, &:focus {
    outline: none;
  }
}

.rr-radio {
  font-size: 16px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  margin: 0 0 10px;
  line-height: 24px;
  input {
    display: block;
    position: absolute;
    top: 4px;
    left: 0;
    font-size: 16px;
    width: 100%;
    cursor: pointer;
    height: 20px;
    opacity: 0;
    z-index: 3;
  }
  label {
    display: block;
    padding: 0 0 0 2em;
    &:before {
      content: '';
      box-sizing: border-box;
      position: absolute;
      top: 2px;
      left: 0;
      width: 20px !important;
      height: 20px !important;
      background-color: transparent;
      border: 2px solid rgba(0, 0, 0 , .54);
      border-radius: 14px;
      z-index: 1;
      transition: border-color 0.28s cubic-bezier(.4, 0, .2, 1);
    }
    &:after {
      box-sizing: border-box;
      content: '';
      position: absolute;
      top: 7px;
      left: 5px;
      width: 10px;
      height: 10px;
      background-color: var(--rr-color-secondary, var(--rr-color-primary));
      border-radius: 50%;
      z-index: 2;
      transform: scale(0, 0);
      transition: transform 0.28s cubic-bezier(.4, 0, .2, 1);
    }
  }
  input:checked + label {
    &:before {
      border-color: var(--rr-color-secondary, var(--rr-color-primary));
    }
    &:after {
      transform: scale(1, 1);
    }
  }
}


$md-checkbox-checked-color: var(--rr-color-secondary, var(--rr-color-primary));
$md-checkbox-border-color: rgba(0, 0, 0, 0.54);
$md-checkbox-border-color-disabled: rgba(0, 0, 0, 0.26);
$md-checkbox-checked-color-disabled: rgba(0, 0, 0, 0.26);
$md-checkbox-margin: 0 0 1em 0;
$md-checkbox-size: 1.25em;
$md-checkbox-padding: .25em;
$md-checkbox-border-width: 2px;
$md-checkbox-border-radius: 0.125em;
$md-checkmark-width: 0.125em;
$md-checkmark-color: #fff;
$md-checkbox-label-padding: 2em;

.rr-checkbox {
  font-size: 15px;
  position: relative;
  margin: $md-checkbox-margin;
  text-align: left;

  *, *:before, *:after {
    box-sizing: border-box;
  }

  &.md-checkbox-inline {
    display: inline-block;
  }

  label {
    cursor: pointer;
    display: inline-flex;
    float: none;
    line-height: $md-checkbox-size;
    vertical-align: top;
    clear: both;
    padding-left: 1px;
    &:not(:empty) {
      padding-left: $md-checkbox-label-padding;

      @include xs {
        line-height: 24px;
        margin-top: -2px;
      }
    }

    &:before, &:after {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      font-size: inherit;
      min-height: initial;
      min-width: initial;
    }

    &:before {
      // box
      width: $md-checkbox-size;
      height: $md-checkbox-size;
      background: #fff;
      border: $md-checkbox-border-width solid $md-checkbox-border-color;
      border-radius: $md-checkbox-border-radius;
      cursor: pointer;
      transition: background .3s;
    }
  }

  input[type="checkbox"] {
    outline: 0;
    visibility: hidden;
    width: $md-checkbox-size;
    margin: 0;
    display: block;
    float: left;
    position: absolute;
    font-size: inherit;

    &:checked {
       + label:before{
        background: $md-checkbox-checked-color;
        border:none;
      }
      + label:after {
        $md-checkmark-size: $md-checkbox-size - 2 * $md-checkbox-padding;

        transform: translate($md-checkbox-padding, math.div($md-checkbox-size, 2) -  math.div($md-checkmark-size, 2.6)) rotate(-45deg);
        width: $md-checkmark-size;
        height: math.div($md-checkmark-size, 2);

        border: $md-checkmark-width solid $md-checkmark-color;
        border-top-style: none;
        border-right-style: none;
      }
    }

    &:disabled {
      + label:before{
        border-color: $md-checkbox-border-color-disabled;
      }
      &:checked {
        + label:before{
          background: $md-checkbox-checked-color-disabled;
        }
      }
    }
  }
}
